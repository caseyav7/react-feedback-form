Index: tests/requirements.txt
===================================================================
diff --git a/tests/requirements.txt b/tests/requirements.txt
deleted file mode 100644
--- a/tests/requirements.txt
+++ /dev/null
@@ -1,2 +0,0 @@
-behave
-selenium
\ No newline at end of file
Index: tests/features/steps/contact_form_steps.py
===================================================================
diff --git a/tests/features/steps/contact_form_steps.py b/tests/features/steps/contact_form_steps.py
deleted file mode 100644
--- a/tests/features/steps/contact_form_steps.py
+++ /dev/null
@@ -1,133 +0,0 @@
-from behave import given, when, then
-from selenium import webdriver
-from selenium.webdriver.common.by import By
-from selenium.webdriver.support.ui import Select
-import time
-
-@given('I am on the Contact Us page')
-def step_open_page(context):
-    context.driver = webdriver.Chrome()
-    context.driver.get("http://localhost:8080")
-    context.driver.maximize_window()
-
-# =============================
-# Positive Test Case
-# =============================
-@when('I fill out all fields correctly')
-def step_fill_form(context):
-    page = context.driver
-    page.find_element(By.NAME, "title").send_keys("Ms")
-    page.find_element(By.NAME, "firstName").send_keys("Jane")
-    page.find_element(By.NAME, "email").send_keys("jane@example.com")
-    Select(page.find_element(By.NAME, "age")).select_by_value("30")
-    page.find_element(By.NAME, "feedback").send_keys("This is great!")
-
-# =============================
-# Negative Test Cases
-# =============================
-@when('I leave the first name blank')
-def step_leave_first_name_blank(context):
-    page = context.driver
-    page.find_element(By.NAME, "title").send_keys("Mr")
-    page.find_element(By.NAME, "firstName").clear()
-    page.find_element(By.NAME, "email").send_keys("john@example.com")
-    Select(page.find_element(By.NAME, "age")).select_by_value("25")
-    page.find_element(By.NAME, "feedback").send_keys("Missing name test")
-
-@when('I enter an invalid email address')
-def step_invalid_email(context):
-    page = context.driver
-    page.find_element(By.NAME, "title").send_keys("Mr")
-    page.find_element(By.NAME, "firstName").send_keys("John")
-    page.find_element(By.NAME, "email").send_keys("invalidemail.com")
-    Select(page.find_element(By.NAME, "age")).select_by_value("40")
-    page.find_element(By.NAME, "feedback").send_keys("Bad email format")
-
-@when('I leave the age dropdown unselected')
-def step_leave_age_blank(context):
-    page = context.driver
-    page.find_element(By.NAME, "title").send_keys("Mr")
-    page.find_element(By.NAME, "firstName").send_keys("John")
-    page.find_element(By.NAME, "email").send_keys("john@example.com")
-    page.find_element(By.NAME, "feedback").send_keys("Age not selected")
-
-@when('I leave the feedback field blank')
-def step_leave_feedback_blank(context):
-    page = context.driver
-    page.find_element(By.NAME, "title").send_keys("Ms")
-    page.find_element(By.NAME, "firstName").send_keys("Sarah")
-    page.find_element(By.NAME, "email").send_keys("sarah@example.com")
-    Select(page.find_element(By.NAME, "age")).select_by_value("35")
-    # feedback left empty
-
-@when('I leave the email blank')
-def step_leave_email_blank(context):
-    page = context.driver
-    page.find_element(By.NAME, "title").send_keys("Ms")
-    page.find_element(By.NAME, "firstName").send_keys("Alex")
-    page.find_element(By.NAME, "email").clear()
-    Select(page.find_element(By.NAME, "age")).select_by_value("28")
-    page.find_element(By.NAME, "feedback").send_keys("Missing email test")
-
-# =============================
-# Multiple fields empty scenario
-# =============================
-@when('I leave the first name blank and the email blank and the feedback field blank')
-def step_multiple_fields_blank(context):
-    page = context.driver
-    page.find_element(By.NAME, "title").send_keys("Mr")
-    page.find_element(By.NAME, "firstName").clear()
-    page.find_element(By.NAME, "email").clear()
-    Select(page.find_element(By.NAME, "age")).select_by_value("40")
-    page.find_element(By.NAME, "feedback").clear()
-
-# =============================
-# Shared Action Step
-# =============================
-@when('I click the submit button')
-def step_click_submit(context):
-    context.driver.find_element(By.ID, "submitButton").click()
-    time.sleep(1)
-
-# =============================
-# Validation / Then Steps
-# =============================
-@then('I should see a success message')
-def step_check_success(context):
-    message = context.driver.find_element(By.ID, "successMessage").text
-    assert "thank you" in message.lower()
-    context.driver.quit()
-
-@then('I should see an error message for the first name field')
-def step_check_firstname_error(context):
-    error = context.driver.find_element(By.ID, "firstNameError").text
-    assert "required" in error.lower()
-    context.driver.quit()
-
-@then('I should see an email validation error')
-def step_check_email_error(context):
-    error = context.driver.find_element(By.ID, "emailError").text
-    assert "valid email" in error.lower()
-    context.driver.quit()
-
-@then('I should see an error message for the age field')
-def step_check_age_error(context):
-    error = context.driver.find_element(By.ID, "ageError").text
-    assert "required" in error.lower()
-    context.driver.quit()
-
-@then('I should see an error message for the feedback field')
-def step_check_feedback_error(context):
-    error = context.driver.find_element(By.ID, "feedbackError").text
-    assert "required" in error.lower()
-    context.driver.quit()
-
-@then('I should see error messages for the first name, email, and feedback fields')
-def step_check_multiple_errors(context):
-    first_error = context.driver.find_element(By.ID, "firstNameError").text
-    email_error = context.driver.find_element(By.ID, "emailError").text
-    feedback_error = context.driver.find_element(By.ID, "feedbackError").text
-    assert "required" in first_error.lower()
-    assert "required" in email_error.lower()
-    assert "required" in feedback_error.lower()
-    context.driver.quit()
\ No newline at end of file
Index: tests/features/contact_form.feature
===================================================================
diff --git a/tests/features/contact_form.feature b/tests/features/contact_form.feature
deleted file mode 100644
--- a/tests/features/contact_form.feature
+++ /dev/null
@@ -1,41 +0,0 @@
-Feature: Contact Form Validation
-  As a user
-  I want to fill out the Contact Us form
-  So that I can send feedback successfully
-
-  Background:
-    Given I am on the Contact Us page
-
-  # Positive Test Case
-  Scenario: Successful form submission
-    When I fill out all fields correctly
-    And I click the submit button
-    Then I should see a success message
-
-  # Negative Test Cases
-  Scenario: Missing required field - First Name
-    When I leave the first name blank
-    And I click the submit button
-    Then I should see an error message for the first name field
-
-  Scenario: Invalid email format
-    When I enter an invalid email address
-    And I click the submit button
-    Then I should see an email validation error
-
-  Scenario: Age not selected
-    When I leave the age dropdown unselected
-    And I click the submit button
-    Then I should see an error message for the age field
-
-  Scenario: Feedback field empty
-    When I leave the feedback field blank
-    And I click the submit button
-    Then I should see an error message for the feedback field
-
-  Scenario: Multiple required fields empty
-    When I leave the first name blank
-    And I leave the email blank
-    And I leave the feedback field blank
-    And I click the submit button
-    Then I should see error messages for the first name, email, and feedback fields
\ No newline at end of file
Index: README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/README.md b/README.md
--- a/README.md
+++ b/README.md	(date 1761351650629)
@@ -1,4 +1,4 @@
-# Contact Form App
+# Contact Us Form App
 
 A simple React-based "Contact Us" form with validation and success feedback.
 
@@ -8,13 +8,14 @@
   ```bash
   brew install node
   ```
+
 ### Follow these steps:
 
 1. **Clone the repository using the project's Git URL.**
    ```bash
    git clone https://github.com/caseyav7/react-feedback-form.git
 
-2. **Step 2: Navigate to the project directory.**
+2. **Navigate to the project directory.**
    ```bash
    cd react-feedback-form
 
@@ -29,5 +30,3 @@
 5. **Open your browser and visit:**
    ```bash
    http://localhost:8080
-   
-add steps to run tests
\ No newline at end of file
